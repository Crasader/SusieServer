// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Control.proto

package com.proto;

public final class Control {
  private Control() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code E_Ctrl}
   */
  public enum E_Ctrl
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *按了左键
     * </pre>
     *
     * <code>Left = 1;</code>
     */
    Left(1),
    /**
     * <pre>
     *按了右键
     * </pre>
     *
     * <code>Right = 2;</code>
     */
    Right(2),
    /**
     * <pre>
     *射击键
     * </pre>
     *
     * <code>Shoot = 3;</code>
     */
    Shoot(3),
    ;

    /**
     * <pre>
     *按了左键
     * </pre>
     *
     * <code>Left = 1;</code>
     */
    public static final int Left_VALUE = 1;
    /**
     * <pre>
     *按了右键
     * </pre>
     *
     * <code>Right = 2;</code>
     */
    public static final int Right_VALUE = 2;
    /**
     * <pre>
     *射击键
     * </pre>
     *
     * <code>Shoot = 3;</code>
     */
    public static final int Shoot_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static E_Ctrl valueOf(int value) {
      return forNumber(value);
    }

    public static E_Ctrl forNumber(int value) {
      switch (value) {
        case 1: return Left;
        case 2: return Right;
        case 3: return Shoot;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<E_Ctrl>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        E_Ctrl> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<E_Ctrl>() {
            public E_Ctrl findValueByNumber(int number) {
              return E_Ctrl.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.proto.Control.getDescriptor().getEnumTypes().get(0);
    }

    private static final E_Ctrl[] VALUES = values();

    public static E_Ctrl valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private E_Ctrl(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:E_Ctrl)
  }

  public interface MceControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MceControl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .E_Ctrl controlType = 1;</code>
     */
    boolean hasControlType();
    /**
     * <code>required .E_Ctrl controlType = 1;</code>
     */
    com.proto.Control.E_Ctrl getControlType();

    /**
     * <pre>
     * 按下状态
     * </pre>
     *
     * <code>required bool isPressed = 2;</code>
     */
    boolean hasIsPressed();
    /**
     * <pre>
     * 按下状态
     * </pre>
     *
     * <code>required bool isPressed = 2;</code>
     */
    boolean getIsPressed();
  }
  /**
   * <pre>
   * 控制协议
   * </pre>
   *
   * Protobuf type {@code MceControl}
   */
  public  static final class MceControl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MceControl)
      MceControlOrBuilder {
    // Use MceControl.newBuilder() to construct.
    private MceControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MceControl() {
      controlType_ = 1;
      isPressed_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MceControl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.proto.Control.E_Ctrl value = com.proto.Control.E_Ctrl.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                controlType_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isPressed_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.proto.Control.internal_static_MceControl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.proto.Control.internal_static_MceControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.proto.Control.MceControl.class, com.proto.Control.MceControl.Builder.class);
    }

    private int bitField0_;
    public static final int CONTROLTYPE_FIELD_NUMBER = 1;
    private int controlType_;
    /**
     * <code>required .E_Ctrl controlType = 1;</code>
     */
    public boolean hasControlType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .E_Ctrl controlType = 1;</code>
     */
    public com.proto.Control.E_Ctrl getControlType() {
      com.proto.Control.E_Ctrl result = com.proto.Control.E_Ctrl.valueOf(controlType_);
      return result == null ? com.proto.Control.E_Ctrl.Left : result;
    }

    public static final int ISPRESSED_FIELD_NUMBER = 2;
    private boolean isPressed_;
    /**
     * <pre>
     * 按下状态
     * </pre>
     *
     * <code>required bool isPressed = 2;</code>
     */
    public boolean hasIsPressed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 按下状态
     * </pre>
     *
     * <code>required bool isPressed = 2;</code>
     */
    public boolean getIsPressed() {
      return isPressed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasControlType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsPressed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, controlType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isPressed_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, controlType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isPressed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.proto.Control.MceControl)) {
        return super.equals(obj);
      }
      com.proto.Control.MceControl other = (com.proto.Control.MceControl) obj;

      boolean result = true;
      result = result && (hasControlType() == other.hasControlType());
      if (hasControlType()) {
        result = result && controlType_ == other.controlType_;
      }
      result = result && (hasIsPressed() == other.hasIsPressed());
      if (hasIsPressed()) {
        result = result && (getIsPressed()
            == other.getIsPressed());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasControlType()) {
        hash = (37 * hash) + CONTROLTYPE_FIELD_NUMBER;
        hash = (53 * hash) + controlType_;
      }
      if (hasIsPressed()) {
        hash = (37 * hash) + ISPRESSED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsPressed());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.proto.Control.MceControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.proto.Control.MceControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.proto.Control.MceControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.proto.Control.MceControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.proto.Control.MceControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.proto.Control.MceControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.proto.Control.MceControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.proto.Control.MceControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.proto.Control.MceControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.proto.Control.MceControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.proto.Control.MceControl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 控制协议
     * </pre>
     *
     * Protobuf type {@code MceControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MceControl)
        com.proto.Control.MceControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.proto.Control.internal_static_MceControl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.proto.Control.internal_static_MceControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.proto.Control.MceControl.class, com.proto.Control.MceControl.Builder.class);
      }

      // Construct using com.proto.Control.MceControl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        controlType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        isPressed_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.proto.Control.internal_static_MceControl_descriptor;
      }

      public com.proto.Control.MceControl getDefaultInstanceForType() {
        return com.proto.Control.MceControl.getDefaultInstance();
      }

      public com.proto.Control.MceControl build() {
        com.proto.Control.MceControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.proto.Control.MceControl buildPartial() {
        com.proto.Control.MceControl result = new com.proto.Control.MceControl(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.controlType_ = controlType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isPressed_ = isPressed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.proto.Control.MceControl) {
          return mergeFrom((com.proto.Control.MceControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.proto.Control.MceControl other) {
        if (other == com.proto.Control.MceControl.getDefaultInstance()) return this;
        if (other.hasControlType()) {
          setControlType(other.getControlType());
        }
        if (other.hasIsPressed()) {
          setIsPressed(other.getIsPressed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasControlType()) {
          return false;
        }
        if (!hasIsPressed()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.proto.Control.MceControl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.proto.Control.MceControl) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int controlType_ = 1;
      /**
       * <code>required .E_Ctrl controlType = 1;</code>
       */
      public boolean hasControlType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .E_Ctrl controlType = 1;</code>
       */
      public com.proto.Control.E_Ctrl getControlType() {
        com.proto.Control.E_Ctrl result = com.proto.Control.E_Ctrl.valueOf(controlType_);
        return result == null ? com.proto.Control.E_Ctrl.Left : result;
      }
      /**
       * <code>required .E_Ctrl controlType = 1;</code>
       */
      public Builder setControlType(com.proto.Control.E_Ctrl value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        controlType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .E_Ctrl controlType = 1;</code>
       */
      public Builder clearControlType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        controlType_ = 1;
        onChanged();
        return this;
      }

      private boolean isPressed_ ;
      /**
       * <pre>
       * 按下状态
       * </pre>
       *
       * <code>required bool isPressed = 2;</code>
       */
      public boolean hasIsPressed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 按下状态
       * </pre>
       *
       * <code>required bool isPressed = 2;</code>
       */
      public boolean getIsPressed() {
        return isPressed_;
      }
      /**
       * <pre>
       * 按下状态
       * </pre>
       *
       * <code>required bool isPressed = 2;</code>
       */
      public Builder setIsPressed(boolean value) {
        bitField0_ |= 0x00000002;
        isPressed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 按下状态
       * </pre>
       *
       * <code>required bool isPressed = 2;</code>
       */
      public Builder clearIsPressed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isPressed_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MceControl)
    }

    // @@protoc_insertion_point(class_scope:MceControl)
    private static final com.proto.Control.MceControl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.proto.Control.MceControl();
    }

    public static com.proto.Control.MceControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MceControl>
        PARSER = new com.google.protobuf.AbstractParser<MceControl>() {
      public MceControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MceControl(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MceControl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MceControl> getParserForType() {
      return PARSER;
    }

    public com.proto.Control.MceControl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MceControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MceControl_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rControl.proto\"=\n\nMceControl\022\034\n\013control" +
      "Type\030\001 \002(\0162\007.E_Ctrl\022\021\n\tisPressed\030\002 \002(\010*(" +
      "\n\006E_Ctrl\022\010\n\004Left\020\001\022\t\n\005Right\020\002\022\t\n\005Shoot\020\003" +
      "B\024\n\tcom.protoB\007Control"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MceControl_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MceControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MceControl_descriptor,
        new java.lang.String[] { "ControlType", "IsPressed", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
